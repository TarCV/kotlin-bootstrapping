diff --git a/build.xml b/build.xml
index 7350855833a..6cf5502a98b 100644
--- a/build.xml
+++ b/build.xml
@@ -766,7 +766,7 @@
             <jar-content>
                 <fileset dir="${output}/classes/reflection"/>
                 <fileset dir="${output}/classes/core"/>
-                <zipfileset src="${protobuf-lite.jar}"/>
-                <zipfileset src="${javax.inject.jar}"/>
+                <zipfileset src="${protobuf-lite.jar}" excludes="META-INF/INDEX.LIST"/><!-- In Guix all jars have the index -->
+                <zipfileset src="${javax.inject.jar}" excludes="META-INF/INDEX.LIST"/>
             </jar-content>
         </pack-runtime-jar>
@@ -841,7 +841,7 @@
             depends="builtins,functions-migration,stdlib,core,reflection,pack-runtime,pack-runtime-sources"/>
 
     <target name="dist"
-            depends="clean,init,prepare-dist,preloader,serialize-builtins,compiler,compiler-sources,ant-tools,jdk-annotations,android-sdk-annotations,runtime,kotlin-js-stdlib,android-compiler-plugin"
+            depends="clean,init,prepare-dist,preloader,serialize-builtins,compiler,compiler-sources,ant-tools,jdk-annotations,runtime"
             description="Builds redistributables from sources"/>
 
     <target name="dist-quick"
diff --git a/libraries/stdlib/src/kotlin/io/ReadWrite.kt b/libraries/stdlib/src/kotlin/io/ReadWrite.kt
index 08b779f559f..29014c58492 100644
--- a/libraries/stdlib/src/kotlin/io/ReadWrite.kt
+++ b/libraries/stdlib/src/kotlin/io/ReadWrite.kt
@@ -250,9 +250,6 @@ public inline fun <T> Reader.useLines(block: (Sequence<String>) -> T): T =
  */
 public fun BufferedReader.lineSequence(): Sequence<String> = LinesSequence(this).constrainOnce()
 
-deprecated("Use lineSequence() instead to avoid conflict with JDK8 lines() method.", ReplaceWith("lineSequence()"))
-public fun BufferedReader.lines(): Sequence<String> = lineSequence()
-
 deprecated("Use lineSequence() function which returns Sequence<String>")
 public fun BufferedReader.lineIterator(): Iterator<String> = lineSequence().iterator()
 
--- a/compiler/backend/src/org/jetbrains/kotlin/codegen/ImplementationBodyCodegen.java
+++ b/compiler/backend/src/org/jetbrains/kotlin/codegen/ImplementationBodyCodegen.java
@@ -677,7 +677,7 @@ private Type genPropertyOnStack(InstructionAdapter iv, MethodContext context, PropertyDescriptor propertyDescriptor, int index) {
                 Type type = typeMapper.mapType(propertyDescriptor.getType());
                 String fieldName = ((FieldOwnerContext) context.getParentContext()).getFieldName(propertyDescriptor, false);
                 iv.getfield(classAsmType.getInternalName(), fieldName, type.getDescriptor());
-                return type.getReturnType();
+                String descriptor = type.getDescriptor(); if (descriptor.contains(")")) { throw new IllegalStateException(descriptor); } else { return Type.getType(descriptor); }
             }
             else {
                 //noinspection ConstantConditions
